# -*- coding: utf-8 -*-
"""AMAZON STOCK PRICE HISTORY.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZLm7veijLY-RmwtkA-iQTX4EI5WjRBf9

# AMAZON STOCK PRICE HISTORY

# Importing necessary Python libraries.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# Creating The Data Frame"""

df = pd.read_csv('/content/Amazon_stock_data.csv')

df

"""# Data Cleaning"""

# Convert 'Date' to datetime format
df['Date'] = pd.to_datetime(df['Date'])

# Sort by date
df = df.sort_values(by='Date')

df.shape

df.columns.tolist()

df.dtypes

df.isnull().sum()

df.describe()

df.info()

"""# Data Visualizations

# Line plot of closing price over time
"""

plt.figure(figsize=(10,5))
plt.plot(df['Date'], df['Close'], label='Closing Price', color='blue')
plt.title('Amazon Closing Stock Price Over Time')
plt.xlabel('Date')
plt.ylabel('Close Price ($)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()

"""# Volume over time"""

plt.figure(figsize=(12,4))
plt.plot(df['Date'], df['Volume'], color='green')
plt.title('Trading Volume Over Time')
plt.xlabel('Date')
plt.ylabel('Volume')
plt.grid(True)
plt.tight_layout()
plt.show()

"""# Moving Averages"""

df['MA20'] = df['Close'].rolling(window=20).mean()
df['MA50'] = df['Close'].rolling(window=50).mean()

plt.figure(figsize=(10,5))
plt.plot(df['Date'], df['Close'], label='Close', alpha=0.6)
plt.plot(df['Date'], df['MA20'], label='20-day MA', color='orange')
plt.plot(df['Date'], df['MA50'], label='50-day MA', color='red')
plt.title('Moving Averages of Amazon Stock')
plt.xlabel('Date')
plt.ylabel('Price ($)')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

"""# Correlation & Heatmap"""

plt.figure(figsize=(8,6))
sns.heatmap(df[['Open', 'High', 'Low', 'Close', 'Volume']].corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.tight_layout()
plt.show()

"""# Daily Return Analysis"""

df['Daily Return (%)'] = df['Close'].pct_change() * 100

plt.figure(figsize=(10,5))
sns.histplot(df['Daily Return (%)'].dropna(), bins=50, color='purple')
plt.title('Histogram of Daily Returns')
plt.xlabel('Daily Return (%)')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

"""# Best & Worst Days"""

best_day = df.loc[df['Daily Return (%)'].idxmax()]
worst_day = df.loc[df['Daily Return (%)'].idxmin()]
print("\nðŸ“ˆ Best Day:\n", best_day[['Date', 'Daily Return (%)', 'Close']])
print("\nðŸ“‰ Worst Day:\n", worst_day[['Date', 'Daily Return (%)', 'Close']])